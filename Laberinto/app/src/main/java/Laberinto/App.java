/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Laberinto;


import java.awt.Color;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;


public class App {
static int[] jugadorPosicion = {-1,-1};
static int[][] mapa = {
        {1,1,1,1,1,1},
        {1,2,0,0,0,0},
        {1,0,0,0,0,0},
        {1,0,0,0,0,0},
        {1,0,0,0,0,3},
};   
static JButton[][] botones = new JButton[mapa.length][mapa[0].length];
static JFrame ventana = new JFrame();
static Color colorMuro = Color.black;
static Color colorPiso = Color.white;
static Color colorJugador = Color.green;
static Color colorMeta = Color.yellow;



public static void main(String[] args) {
    ventana.setSize(600,600);
    ventana.setTitle("Laberinto");
    ventana.setVisible(true);
    ventana.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    ventana.setLocationRelativeTo(null);
     
    for(int i=0;1<mapa.length;i++){ 
        for(int j=0;j<mapa.length;j++){
            JButton btn=new JButton();
      if(mapa[i][j]==0){
          btn.setBackground(colorPiso);
      }else if (mapa[i][j]==1){
          btn.setBackground(colorMuro);
      }else if (mapa[i][j]==2){
          btn.setBackground(colorJugador);
          jugadorPosicion[0]=i;
          jugadorPosicion[1]=j;
      }else if (mapa[i][j]==3){
          btn.setBackground(colorMeta);
      }
        btn.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    JButton botonPushado = (JButton)e.getSource();
                    Color botonColor = botonPushado.getBackground();
                    if(botonColor.equals(colorPiso)){
                       avanzarJugadorBotonPushado( botonPushado);
                     }else if (botonColor.equals(colorMuro)){
                   JOptionPane.showMessageDialog(null, "Es un muro");
                    }else if (botonColor.equals(colorJugador)){
                   JOptionPane.showMessageDialog(null, "Eres tu");
                    }else if (botonColor.equals(colorMeta)){
                    JOptionPane.showMessageDialog(null, "Es la meta");
                    }
                }
        });
             ventana.add(btn);
             botones[i][j]=btn;
        }
    }

    ventana.setLayout(new GridLayout(mapa.length,mapa[0].length));
    ventana.setVisible(true);
}
    static void obtenerPosicionBotonPushado(JButton botonPushado){
       int[] coordenadasDelBotonPushado = {-1,-1};
        for(int i=0;1<mapa.length;i++){ 
            for(int j=0;j<mapa.length;j++){
                if(botones[i][j].equals(botonPushado)){
                   coordenadasDelBotonPushado[0]=i; 
                   coordenadasDelBotonPushado[1]=j;
                   break;
                   
                }
            }
            
           if(coordenadasDelBotonPushado[0]>-1){
               break;
           }
        }
       return coordenadasDelBotonPushado;       
    }
    static void avanzarJugadorBotonPushado(JButton botonPushado){
     int[] posicionDelBotonPushado = obtenerPosicionBotonPushado(botonPushado);
        JButton jugadorBoton = botones[jugadorPosicion[0]][jugadorPosicion[1]];
        Color colorDelBotonPushado = botonPushado.getBackground();
        if(Math.abs(jugadorPosicion[0] - posicionDelBotonPushado[0])<2&& Math.abs(jugadorPosicion[1] - posicionDelBotonPushado[1])<2){
            
        
        if(colorDelBotonPushado.equals(colorPiso)){         
         jugadorBoton.setBackground(colorPiso);
         botonPushado.setBackground(colorJugador);
         jugadorPosicion[0]=posicionDelBotonPushado[0];
         jugadorPosicion[1]=posicionDelBotonPushado[1];
    }else if(colorDelBotonPushado.equals(colorPiso)){
        JOptionPane.showMessageDialog(null, "Es un muro");
        System.exit(0);
    }
    }else{JOptionPane.showMessageDialog(null, "no puedes mover mas de un espacio por click");
            
        }
   }
}